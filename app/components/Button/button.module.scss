@import "../../styles/mixin.module";
@import "../../styles/variable.module";

@mixin button-base-styles() {
  @include size();
  @include flex(center, center);
  @include padding(1rem, 2rem, 1rem, 2rem);
  @include border-radius(8px);
}

/* Classe BEM pour le bouton primaire */
.button-primary {
  &__block {
    // Styles pour le bloc principal (bouton)
    @include button-base-styles();

    &--default {
      // Styles pour l'état par défaut
      color: map-get(map-get($primary-button-colors, default), color);
      background-color: map-get(map-get($primary-button-colors, default), background-color);
      border: map-get(map-get($primary-button-colors, default), border);
      &:hover {
        // Styles pour l'état hover
        color: map-get(map-get($primary-button-colors, hover), color);
        background-color: map-get(map-get($primary-button-colors, hover), background-color);
      }
      &:focus {
        // Styles pour l'état focus
        color: map-get(map-get($primary-button-colors, focus), color);
        background-color: map-get(map-get($primary-button-colors, focus), background-color);
        border: map-get(map-get($primary-button-colors, focus), border);
      }
      &:disabled {
        // Styles pour l'état disabled
        color: map-get(map-get($primary-button-colors, disabled), color);
        background-color: map-get(map-get($primary-button-colors, disabled), background-color);
      }
    }
  }
}

/* Classe BEM pour le bouton secondaire */
.button-secondary {
  &__block {
    // Styles pour le bloc principal (bouton)
    @include button-base-styles();

    &--default {
      // Styles pour l'état par défaut
      color: map-get(map-get($secondary-button-colors, default), color);
      background-color: map-get(map-get($secondary-button-colors, default), background-color);
      border: map-get(map-get($secondary-button-colors, default), border);

      &:hover {
        // Styles pour l'état hover
        color: map-get(map-get($secondary-button-colors, hover), color);
        background-color: map-get(map-get($secondary-button-colors, hover), background-color);
        border: map-get(map-get($secondary-button-colors, hover), border);
      }
      &:focus {
        // Styles pour l'état focus
        color: map-get(map-get($secondary-button-colors, focus), color);
        background-color: map-get(map-get($secondary-button-colors, focus), background-color);
        border: map-get(map-get($secondary-button-colors, focus), border);
      }
      &:disabled {
        // Styles pour l'état disabled
        color: map-get(map-get($secondary-button-colors, disabled), color);
        background-color: map-get(map-get($secondary-button-colors, disabled), background-color);
        border: map-get(map-get($secondary-button-colors, disabled), border);
      }
    }   
  }
}

/* Classe BEM pour le bouton secondaire sans bordure */
.button-secondary-borderless {
  &__block {
    // Styles pour le bloc principal (bouton)
    @include button-base-styles();

    &--default {
      // Styles pour l'état par défaut
      color: map-get(map-get($secondary-button-colors-borderless, default), color);
      background-color: map-get(map-get($secondary-button-colors-borderless, default), background-color);
      border: map-get(map-get($secondary-button-colors-borderless, default), border);

      &:hover {
        // Styles pour l'état hover
        color: map-get(map-get($secondary-button-colors-borderless, hover), color);
        background-color: map-get(map-get($secondary-button-colors-borderless, hover), background-color);
        border: map-get(map-get($secondary-button-colors-borderless, hover), border);
      }
      &:focus {
        // Styles pour l'état focus
        color: map-get(map-get($secondary-button-colors-borderless, focus), color);
        background-color: map-get(map-get($secondary-button-colors-borderless, focus), background-color);
        border: map-get(map-get($secondary-button-colors-borderless, focus), border);
      }
      &:disabled {
        // Styles pour l'état disabled
        color: map-get(map-get($secondary-button-colors-borderless, disabled), color);
        background-color: map-get(map-get($secondary-button-colors-borderless, disabled), background-color);
        border: map-get(map-get($secondary-button-colors-borderless, disabled), border);
      }
    }   
  }
}

/* Classe BEM pour le bouton tertiaire */
.button-tertiary {
  &__block {
    // Styles pour le bloc principal (bouton)
    @include button-base-styles();

    &--default {
      // Styles pour l'état par défaut
      color: map-get(map-get($tertiary-button-colors, default), color);
      background-color: map-get(map-get($tertiary-button-colors, default), background-color);
      border: map-get(map-get($tertiary-button-colors, default), border);

      &:hover {
        // Styles pour l'état hover
        color: map-get(map-get($tertiary-button-colors, hover), color);
        background-color: map-get(map-get($tertiary-button-colors, hover), background-color);
        border: map-get(map-get($tertiary-button-colors, hover), border);
       
      }
      &:focus {
        // Styles pour l'état focus
        color: map-get(map-get($tertiary-button-colors, focus), color);
        background-color: map-get(map-get($tertiary-button-colors, focus), background-color);
        border: map-get(map-get($tertiary-button-colors, focus), border);
      }
      &:disabled {
        // Styles pour l'état disabled
        color: map-get(map-get($tertiary-button-colors, disabled), color);
        background-color: map-get(map-get($tertiary-button-colors, disabled), background-color);
        border: map-get(map-get($tertiary-button-colors, disabled), border);
      }
    }
  }
}

/* Classe BEM pour le bouton tertiaire */
.button-tertiary-borderless {
  &__block {
    // Styles pour le bloc principal (bouton)
    @include button-base-styles();

    &--default {
      // Styles pour l'état par défaut
      color: map-get(map-get($tertiary-button-colors-borderless, default), color);
      background-color: map-get(map-get($tertiary-button-colors-borderless, default), background-color);
      border: map-get(map-get($tertiary-button-colors-borderless, default), border);

      &:hover {
        // Styles pour l'état hover
        color: map-get(map-get($tertiary-button-colors-borderless, hover), color);
        background-color: map-get(map-get($tertiary-button-colors-borderless, hover), background-color);
        border: map-get(map-get($tertiary-button-colors-borderless, hover), border);
       
      }
      &:focus {
        // Styles pour l'état focus
        color: map-get(map-get($tertiary-button-colors-borderless, focus), color);
        background-color: map-get(map-get($tertiary-button-colors-borderless, focus), background-color);
        border: map-get(map-get($tertiary-button-colors-borderless, focus), border);
      }
      &:disabled {
        // Styles pour l'état disabled
        color: map-get(map-get($tertiary-button-colors-borderless, disabled), color);
        background-color: map-get(map-get($tertiary-button-colors-borderless, disabled), background-color);
        border: map-get(map-get($tertiary-button-colors-borderless, disabled), border);
      }
    }
  }
}